import asyncio
from ctypes import util
from distutils import extension
from email import message
from lzma import FILTER_LZMA1
from typing import Optional
import os
from xmlrpc.client import Fault
import discord
from discord import app_commands
import requests
import shutil
import gtts
import pdf2image

from utils import countdown_fn

MY_GUILD = discord.Object(id=720687175611580426)  # replace with your guild id

class MyClient(discord.Client):
    def __init__(self, *, intents: discord.Intents):
        super().__init__(intents=intents)
        self.tree = app_commands.CommandTree(self)

    async def on_ready(self):
        print(f'Logged in as {self.user} (ID: {self.user.id})')
        print('----------------------------------------------------------')

    async def setup_hook(self):
        # This copies the global commands over to your guild.
        self.tree.copy_global_to(guild=MY_GUILD)
        await self.tree.sync(guild=MY_GUILD)


intents = discord.Intents.all()
intents.members = True
client = MyClient(intents=intents)

client.last_image = ""
client.last_video = ""
client.last_audio = ""
client.last_pdf = ""

################################################# Help #################################################
@client.tree.command(description="‚ùî ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠")
async def help(interaction: discord.Interaction):
    # ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π Embed
    util = discord.Embed(title="**‚ùî ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠**",description="‚ï∞ *üîß ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏≠‡∏£‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå*", color=0x40eefd)
    util.add_field(name="**‚è∞ ‡∏ô‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á**", value="`/countdown`", inline=False)
    util.add_field(name="**üîå ‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠**", value="`/countdis`", inline=False)
    util.add_field(name="**üõ° ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠**", value="`/except`", inline=False) 
    util.add_field(name="**üëÑ ‡∏™‡∏±‡∏á‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á**", value="`/tts`", inline=False)
    util.add_field(name="**üìÑ ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û**", value="`/pdftopng`", inline=False)
    util.add_field(name="**‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á**", value="`/cancel`", inline=False)

    music = discord.Embed(title="**‚ùî ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠**",description="‚ï∞ *üéµ ‡∏°‡∏µ‡πÄ‡∏î‡∏µ‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏•‡∏á*", color=0xff3859)
    music.add_field(name="**üì∂ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ö‡∏≠‡∏ó**", value="`/music summon`", inline=False)
    music.add_field(name="**‚èèÔ∏è ‡πÄ‡∏ï‡∏∞‡∏ö‡∏≠‡∏ó**", value="`/music dis`", inline=False)
    music.add_field(name="**‚ñ∂Ô∏è ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á**", value="`/music play`", inline=False)
    music.add_field(name="**üíæ ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏µ‡πÄ‡∏î‡∏µ‡∏¢**", value="`/music plocal`", inline=False)
    music.add_field(name="**‚è≠ ‡∏Ç‡πâ‡∏≤‡∏°**", value="`/music skip`", inline=False)
    music.add_field(name="**‚è∏ ‡∏û‡∏±‡∏Å**", value="`/music pause`", inline=False)
    music.add_field(name="**‚èØ ‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠**", value="`/music resume`", inline=False)
    music.add_field(name="**‚èπ ‡∏´‡∏¢‡∏∏‡∏î**", value="`/music stop`", inline=False)
    music.add_field(name="**üî¢ ‡∏Ñ‡∏¥‡∏ß‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô**", value="`/music queue`", inline=False)
    music.add_field(name="**üÜë ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î**", value="`/music clear`", inline=False)

    image = discord.Embed(title="**‚ùî ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠**",description="‚ï∞ *üñº ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏†‡∏≤‡∏û*", color=0x5be259)
    image.add_field(name="**üî¶ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥**", value="`/image info`", inline=False)
    image.add_field(name="**üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏†‡∏≤‡∏û‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢**", value="`/image reverse`", inline=False)
    image.add_field(name="**‚¨ú ‡πÅ‡∏õ‡∏•‡∏á‡∏†‡∏≤‡∏û‡∏™‡∏µ‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏û‡∏Ç‡∏≤‡∏ß‡∏î‡∏≥**", value="`/image grayscale`", inline=False)
    image.add_field(name="**üé® ‡πÅ‡∏õ‡∏•‡∏á‡∏†‡∏≤‡∏û‡∏Ç‡∏≤‡∏ß‡∏î‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏û‡∏™‡∏µ**", value="`/image colorize`", inline=False)
    image.add_field(name="**üßπ ‡∏•‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≤‡∏ß**", value="`/image removebg`", inline=False)
    image.add_field(name="**üì∑ ‡∏ï‡∏±‡∏ß‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code**", value="`/image qr`", inline=False)
    image.add_field(name="**‚Üî ‡∏¢‡∏∑‡∏î‡∏†‡∏≤‡∏û**", value="`/image wide`", inline=False)
    image.add_field(name="**‚Üî‚Üî ‡∏¢‡∏∑‡∏î‡∏î‡∏î‡∏î‡∏î‡∏†‡∏≤‡∏û**", value="`/image ultrawide`", inline=False)
    image.add_field(name="**‚Üô‚Üó ‡∏õ‡∏£‡∏±‡∏ö‡∏™‡πÄ‡∏Å‡∏•‡∏†‡∏≤‡∏û**", value="`/image scale`", inline=False)
    image.add_field(name="**‚Üï‚Üî ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û**", value="`/image resize`", inline=False)
    image.add_field(name="**‚úè ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏ô‡∏†‡∏≤‡∏û**", value="`/image text`", inline=False)
    image.add_field(name="**üëÅ Laser Eye**", value="`/image laser`", inline=False)
    image.add_field(name="**üç≥ Deep Fryer**", value="`/image deepfry`", inline=False)
    image.add_field(name="**üê∂ Petpet Generator**", value="`/image pet`", inline=False)

    video = discord.Embed(title="**‚ùî ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠**",description="‚ï∞ *üé• ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠*", color=0x4f4eca)
    video.add_field(name="**üìπ ‡πÉ‡∏™‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏û**", value="`/video imgaudio`", inline=False)
    video.add_field(name="**üì∫ ‡πÉ‡∏™‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å Youtube ‡πÉ‡∏ô‡∏†‡∏≤‡∏û**", value="`/video imgyt`", inline=False)
    video.add_field(name="**üß≤ ‡∏ï‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏õ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠**", value="`/video videomix`", inline=False)

    download = discord.Embed(title="**‚ùî ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠**",description="‚ï∞ *üì¶ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå*", color=0xff80c9)
    download.add_field(name="**üì∫ Youtube Downloader**", value="`/download youtube`", inline=False)
    download.add_field(name="**üíø Audio Downloader**", value="`/download audio`", inline=False)
    download.add_field(name="**üéû Video Downloader**", value="`/download video`", inline=False)

    update = discord.Embed(title="**‚ùî ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠**",description="‚ï∞ *üìå ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó*", color=0xdcfa80)
    update.add_field(name="1Ô∏è‚É£ V 2.0 | 07/11/2021", value="‚Ä¢ Add: Countdown\n‚Ä¢ Add: PrivateKey\n‚Ä¢ Add: Mute\n‚Ä¢ Add: YT Downloader\n‚Ä¢ Add: Music Player\n‚Ä¢ Add: Image Processing")
    update.add_field(name="2Ô∏è‚É£ V 2.1 | 12/11/2021", value="‚Ä¢ Add: Audio and Video Downloader")
    update.add_field(name="3Ô∏è‚É£ V 2.2 | 29/11/2021", value="‚Ä¢ Add: Image Processing\n‚Ä¢ Add: Countdown and Disconnect\n‚Ä¢ Add: PDF To PNG Converter\n‚Ä¢ Add: Play Audio (Local)\n‚Ä¢ Fix: Prefix")
    update.add_field(name="4Ô∏è‚É£ V 2.3 | 17/12/2021", value="‚Ä¢ Add: Remove Background\n‚Ä¢ Add: AutoSave Attachment\n‚Ä¢ Add: Resize (width x height)\n‚Ä¢ Add: Read Last Attachment\n‚Ä¢ Fix: Alpha Channel for Image Processing")
    update.add_field(name="5Ô∏è‚É£ V 2.4 | 20/12/2021", value="‚Ä¢ Add: Text on Image\n‚Ä¢ Add: Grayscale to Color\n‚Ä¢ Add: Deep Fryer\n‚Ä¢ Fix: Countdown Style\n‚Ä¢ Fix: Cancel Command\n‚Ä¢ Delete: PrivateKey")
    update.add_field(name="6Ô∏è‚É£ V 2.5 | 12/01/2022", value="‚Ä¢ Add: Scamming Protection V1\n‚Ä¢ Add: Role Selector\n‚Ä¢ Fix: ‡∏°‡∏µ Model ‡∏Ç‡∏≠‡∏á %color ‡πÅ‡∏•‡πâ‡∏ß")
    update.add_field(name="7Ô∏è‚É£ V 2.6 | 21/01/2022", value="‚Ä¢ Add: Earrape Warning\n‚Ä¢ Add: Video Processing")
    update.add_field(name="8Ô∏è‚É£ V 2.7 | 09/02/2022", value="‚Ä¢ Add: Laser Eye Meme\n‚Ä¢ Add: Text to Speech\n‚Ä¢ Add: Image Properties\n‚Ä¢ Add: Image Processing\n‚Ä¢ Add: Video Processing")
    update.add_field(name="9Ô∏è‚É£ V 2.8 | 26/03/2022", value="‚Ä¢ Add: Hosting Server Status\n‚Ä¢ Add: Countdis Exception\n‚Ä¢ Add: QR Code Generator\n‚Ä¢ Add: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó\n‚Ä¢ Add: ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏õ‡∏•‡∏Ñ‡∏≥‡πÄ‡∏û‡∏µ‡πâ‡∏¢‡∏ô")
    update.add_field(name="9Ô∏è‚É£ V 3.0 | 26/03/2022", value="**‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó**")

    select = discord.ui.Select(placeholder="‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π",options=[
    discord.SelectOption(label="‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏≠‡∏£‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå",emoji="üîß",description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ",value="util",default=False),
    discord.SelectOption(label="‡∏°‡∏µ‡πÄ‡∏î‡∏µ‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏•‡∏á",emoji="üéµ",description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏•‡∏á",value="music",default=False),
    discord.SelectOption(label="‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏†‡∏≤‡∏û",emoji="üñº",description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û",value="image",default=False),
    discord.SelectOption(label="‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠",emoji="üé•",description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠",value="video",default=False),
    discord.SelectOption(label="‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå",emoji="üì¶",description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå",value="download",default=False),
    discord.SelectOption(label="‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó",emoji="üìå",description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó",value="update",default=False)
    ])

    async def my_callback(interaction):
        if select.values[0] == "util":
            await interaction.response.edit_message(embed=util)

        elif select.values[0] == "music":
            await interaction.response.edit_message(embed=music)
        
        elif select.values[0] == "image":
            await interaction.response.edit_message(embed=image)

        elif select.values[0] == "video":
            await interaction.response.edit_message(embed=video)

        elif select.values[0] == "download":
            await interaction.response.edit_message(embed=download)

        elif select.values[0] == "update":
            await interaction.response.edit_message(embed=update)
            
    select.callback = my_callback
    view = discord.ui.View()
    view.add_item(select)

    await interaction.response.send_message(embed=util, view=view)


################################################# Countdown #################################################
client.timestop1 = 0
@client.tree.command(description="‚è∞ ‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á")
@app_commands.describe(time="‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
async def countdown(interaction: discord.Interaction, time: str):
    time_int = int(time)
    client.timestop1 = time_int

    if time_int < 0:
        await interaction.response.send_message("**‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‚ùå**")
    else:
        output = countdown_fn.countdown_fn(time_int)
        await interaction.response.send_message(output)
        for i in range(time_int):
            output = countdown_fn.countdown_fn(time_int)
            await interaction.edit_original_message(content=output)
            await asyncio.sleep(1)
            time_int -= 1

            if client.timestop1 == -22052603:
                await interaction.edit_original_message(content="**‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å üõë**")
                break
        if client.timestop1 != -22052603:
            await interaction.edit_original_message(content="**‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤ üîî**")


################################################# Countdis #################################################
client.timestop2 = 0
client.member_except = []
@client.tree.command(description="‚è±Ô∏è ‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠")
@app_commands.describe(time="‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
async def countdis(interaction: discord.Interaction, time: str):
    people_counter = 0

    time_int = int(time)
    client.timestop2 = time_int

    if time_int < 0:
        await interaction.response.send_message("**‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‚ùå**")
    else:
        output = countdown_fn.countdown_fn(time_int)
        await interaction.response.send_message(output)
        for i in range(time_int):
            output = countdown_fn.countdown_fn(time_int)
            await interaction.edit_original_message(content=output)
            await asyncio.sleep(1)
            time_int -= 1

            if client.timestop2 == -22052603:
                await interaction.edit_original_message(content="**‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å üõë**")
                break
        if client.timestop2 != -22052603:
            try:
                members = interaction.user.voice.channel.members
                channel = interaction.user.voice.channel
            
                await interaction.edit_original_message(content="**‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤ üîî**")
                
                if client.member_except == []: # ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô
                    members = interaction.user.voice.channel.members
                    for member in members:
                        await member.move_to(None)
                        people_counter += 1

                    client.member_except = []
                    await interaction.followup.send(f"‚èèÔ∏è  **‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {people_counter} ‡∏Ñ‡∏ô ‡∏à‡∏≤‡∏Å `{channel}` ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß**")

                else:
                    members = interaction.user.voice.channel.members
                    for member in members:
                        if member not in client.member_except: # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÉ‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å
                            await member.move_to(None)
                            people_counter += 1

                    await interaction.followup.send(f"‚èèÔ∏è  **‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {people_counter} ‡∏Ñ‡∏ô ‡∏à‡∏≤‡∏Å `{channel}` ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß**")
                    
            except:
                await interaction.edit_original_message(content="**‚Ñπ ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô ‡∏à‡∏∂‡∏á‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ**")


################################################# Except #################################################
client.last_use = [0]

@client.tree.command(name="except",description="‚õî ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Countdis")
async def except_def(interaction: discord.Interaction):
    user = interaction.user
    if user.id not in client.last_use:
        client.member_except.append(user) # ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å
        client.last_use.pop(0)
        client.last_use.append(user.id)
        await interaction.response.send_message(content=f"**<@{user.id}> ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô <:Approve:921703512382009354>**")
    else:
        client.member_except.remove(user) # ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å
        client.last_use.pop(0)
        client.last_use.append(0)
        await interaction.response.send_message(content=f"**<@{user.id}> ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô <:Deny:921703523111022642>**")


################################################# Send Message #################################################
@client.tree.command(description="üì® ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á)")
@app_commands.describe(channel="‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á",message="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°")
async def send(interaction: discord.Interaction, channel: discord.TextChannel, *, message: str):
    if interaction.user.id == 269000561255383040:
        await interaction.response.send_message(content=f'"{message}" ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á {channel.mention}')
        await channel.send(message)
    else:
        await interaction.response.send_message(content="**‡πÅ‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå!**")


################################################# TTS #################################################
@client.tree.command(description="üó£Ô∏è ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á")
@app_commands.choices(language=[
    app_commands.Choice(name="üáøüá¶ Afrikaans (South Africa)",value="af"),
    app_commands.Choice(name="üá©üá∞ Danish (Denmark)",value="da"),
    app_commands.Choice(name="üáßüá™ Dutch (Belgium)",value="nl"),
    app_commands.Choice(name="üá∫üá∏ English (US)",value="en"),
    app_commands.Choice(name="üá´üáÆ Finnish (Finland)",value="fi"),
    app_commands.Choice(name="üá´üá∑ French (France)",value="fr"),
    app_commands.Choice(name="üá©üá™ German (Germany)",value="de"),
    app_commands.Choice(name="üáÆüá≥ Gujarati (India)",value="gu"),
    app_commands.Choice(name="üáÆüá≥ Hindi (India)",value="hi"),
    app_commands.Choice(name="üáÆüá© Indonesian (Indonesia)",value="id"),
    app_commands.Choice(name="üáÆüáπ Italian (Italy)",value="it"),
    app_commands.Choice(name="üáØüáµ Japanese (Japan)",value="ja"),
    app_commands.Choice(name="üá∞üá∑ Korean (South Korea)",value="ko"),
    app_commands.Choice(name="üá≤üáæ Malay (Malaysia)	",value="ms"),
    app_commands.Choice(name="üáßüá∑ Portuguese (Brazil)",value="pt"),
    app_commands.Choice(name="üá∑üá¥ Romanian (Romania)",value="ro"),
    app_commands.Choice(name="üá∑üá∫ Russian (Russia)",value="ru"),
    app_commands.Choice(name="üá∑üá∏ Serbian (Serbia)",value="sr"),
    app_commands.Choice(name="üá∏üá∞ Slovak (Slovakia)",value="sk"),
    app_commands.Choice(name="üá™üá∏ Spanish (Spain)",value="es"),
    app_commands.Choice(name="üá∏üá™ Swedish (Sweden)",value="sv"),
    app_commands.Choice(name="üáπüá≠ Thai (Thailand)",value="th"),
    app_commands.Choice(name="üá∫üá¶ Ukrainian (Ukraine)",value="uk"),
    app_commands.Choice(name="üáªüá≥ Vietnamese (Vietnam)",value="vi"),
    ])

@app_commands.describe(language="‡∏†‡∏≤‡∏©‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î",text="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°")
async def tts(interaction: discord.Interaction,language: discord.app_commands.Choice[str] ,* , text: str):
    tts = gtts.gTTS(text=text,lang=language.value)
    tts.save(f'temp/audio/tts_{language.value}.mp3')

    file = discord.File(f'temp/audio/tts_{language.value}.mp3')
    await interaction.response.send_message(file=file)


################################################# PDF to PNG #################################################
@client.tree.command(description="üìÑ ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ PDF ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û")
@app_commands.choices(
    zipped=[
    app_commands.Choice(name="‚úÖ Yes | ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ 4 ‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ",value="1"),
    app_commands.Choice(name="‚ùå No | ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 3 ‡∏´‡∏ô‡πâ‡∏≤ (‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏ä‡πâ‡∏≤)",value="0")])
@app_commands.choices(
    extension=[
    app_commands.Choice(name="PNG | ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á ‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏ç‡πà‡∏Å‡∏ß‡πà‡∏≤",value="png"),
    app_commands.Choice(name="JPG | ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á ‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏•‡πá‡∏Å‡∏Å‡∏ß‡πà‡∏≤",value="jpg")])

@app_commands.describe(zipped="‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏µ‡∏ö‡∏≠‡∏±‡∏î‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà",extension="‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",filename="‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Å‡πá‡πÑ‡∏î‡πâ)")
async def pdftoimage(interaction: discord.Interaction,zipped: discord.app_commands.Choice[str], extension: discord.app_commands.Choice[str], filename: Optional[str] = None):
    outfilename = filename or client.last_pdf.split(".")[0]

    try:
        await interaction.response.send_message("**üîÅ  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û...**")
        pages = pdf2image.convert_from_path(f"temp/autosave/{client.last_pdf}", 200)
    except:
        await interaction.response.send_message("**‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£**")
        return

    if extension.value == "png":
        extensionUPPER = "PNG"
    elif extension.value == "jpg":
        extensionUPPER = "JPEG"

    if zipped.value == "0":
        for i in range(len(pages)):
            pages[i].save(f'temp/document/{outfilename}_page{i+1}.{extension.value}', extensionUPPER)
            file = discord.File(f"temp/document/{outfilename}_page{i+1}.{extension.value}")
            await interaction.followup.send(file=file)

    elif zipped.value == "1":
        for i in range(len(pages)):
            pages[i].save(f'temp/document/{outfilename}_page{i+1}.{extension.value}', extensionUPPER)
        
        await interaction.followup.send(f"**üóúÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏µ‡∏ö‡πÑ‡∏ü‡∏•‡πå...**")
        shutil.make_archive(f"{outfilename}", 'zip', 'temp/document')
        shutil.move(f"{outfilename}.zip", f"temp/compressed/{outfilename}.zip")

        try:
            file = discord.File(f"temp/compressed/{outfilename}.zip")
            await interaction.followup.send(file=file)
        except:
            size = os.path.getsize(f"temp/compressed/{outfilename}.zip")/1000000
            await interaction.followup.send("**üì¶ ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ** ({:.2f}MB)".format(size))

        await asyncio.sleep(10)
        for i in range(len(pages)):
            os.remove(f"temp/document/{outfilename}_page{i+1}.{extension.value}")














################################################# Cancel #################################################
@client.tree.command(description="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á")
@app_commands.choices(command=[
    app_commands.Choice(name="Countdown",value="cancel_countdown"),
    app_commands.Choice(name="Countdis",value="cancel_countdis"),
    ])

async def cancel(interaction: discord.Interaction, command: discord.app_commands.Choice[str]):
    if command.value == "cancel_countdown":
        client.timestop1 = -22052603
        await interaction.response.send_message(content="**üõë ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Countdown ‡πÅ‡∏•‡πâ‡∏ß**")
    elif command.value == "cancel_countdis":
        client.timestop2 = -22052603
        await interaction.response.send_message(content="**üõë ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Countdis ‡πÅ‡∏•‡πâ‡∏ß**")


################################################# Auto Save Attachments with name #################################################
@client.event
async def on_message(message):
    if message.author.id != "907247505346035752":
        extension = ""
        url = ""

        try:
            attachment_url = message.attachments[0]
            url = str(attachment_url.url)
            splitedbydot = url.split(".")
            splitedbyslash = splitedbydot[len(splitedbydot)-2].split("/")
            name = splitedbyslash[len(splitedbyslash)-1]
            extension = splitedbydot[len(splitedbydot)-1]

            FileName = name+"."+extension
            r = requests.get(url, stream=True)
            with open(FileName, 'wb') as out_file:
                shutil.copyfileobj(r.raw, out_file)
            shutil.move(FileName, f"temp/autosave/{FileName}")
            print('Saving : ' + FileName)

            if extension == "png" or extension == "jpg" or extension == "jpeg" or extension == "webp":
                client.last_image = FileName
                print(f"Saved {FileName} to Last Image")
            elif extension == "mp4" or extension == "webm" or extension == "mkv" or extension == "avi":
                client.last_video = FileName
                print(f"Saved {FileName} to Last Video")
            elif extension == "mp3" or extension == "wav" or extension == "m4a":
                client.last_audio = FileName
                print(f"Saved {FileName} to Last Audio")
            elif extension == "pdf":
                client.last_pdf = FileName
                print(f"Saved {FileName} to Last PDF")
        
        except:
            print("No attachment")

        














# To make an argument optional, you can either give it a supported default argument
# or you can mark it as Optional from the typing standard library. This example does both.
@client.tree.command()
@app_commands.describe(member='The member you want to get the joined date from; defaults to the user who uses the command')
async def joined(interaction: discord.Interaction, member: Optional[discord.Member] = None):
    """Says when a member joined."""
    # If no member is explicitly provided then we use the command user here
    member = member or interaction.user

    # The format_dt function formats the date time into a human readable representation in the official client
    await interaction.response.send_message(f'{member} joined {discord.utils.format_dt(member.joined_at)}')


# A Context Menu command is an app command that can be run on a member or on a message by
# accessing a menu within the client, usually via right clicking.
# It always takes an interaction as its first parameter and a Member or Message as its second parameter.

# This context menu command only works on members
@client.tree.context_menu(name='Show Join Date')
async def show_join_date(interaction: discord.Interaction, member: discord.Member):
    # The format_dt function formats the date time into a human readable representation in the official client
    await interaction.response.send_message(f'{member} joined at {discord.utils.format_dt(member.joined_at)}')


# This context menu command only works on messages
@client.tree.context_menu(name='Report to Moderators')
async def report_message(interaction: discord.Interaction, message: discord.Message):
    # We're sending this response message with ephemeral=True, so only the command executor can see it
    await interaction.response.send_message(
        f'Thanks for reporting this message by {message.author.mention} to our moderators.', ephemeral=True
    )

    # Handle report by sending it into a log channel
    log_channel = interaction.guild.get_channel(720687176115027970)  # replace with your channel id

    embed = discord.Embed(title='Reported Message')
    if message.content:
        embed.description = message.content

    embed.set_author(name=message.author.display_name, icon_url=message.author.display_avatar.url)
    embed.timestamp = message.created_at

    url_view = discord.ui.View()
    url_view.add_item(discord.ui.Button(label='Go to Message', style=discord.ButtonStyle.url, url=message.jump_url))

    await log_channel.send(embed=embed, view=url_view)

#‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏ó‡∏≥ Auto Delete ‡∏Ç‡∏≠‡∏á Auto Save
Token = os.environ['MiuraTesterToken']
client.run(Token)